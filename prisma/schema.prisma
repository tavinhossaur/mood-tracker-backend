// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String                  @id @default(uuid()) @db.Uuid
  username                    String                  @db.VarChar(255)
  password                    String                  @db.VarChar(60)
  email                       String                  @db.VarChar(255) @unique
  created_at                  DateTime                @default(now()) @db.Timestamptz()

  mood                        Mood[]

  profile_preferences         ProfilePreferences?     @relation(fields: [profile_preferences_id], references: [id])
  profile_preferences_id      String?                 @db.Uuid @unique
}

model Mood {
  id                          String                  @id @default(uuid()) @db.Uuid
  mood_value                  Int                     @db.Integer
  created_at                  DateTime                @default(now()) @db.Timestamptz()
  updated_at                  DateTime                @updatedAt @db.Timestamptz()

  user                        User                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id                     String                  @db.Uuid

  notes                       Notes[]
}

model Notes {
  id                          String                  @id @default(uuid()) @db.Uuid
  text_content                String

  mood                        Mood                    @relation(fields: [mood_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  mood_id                     String                  @db.Uuid @unique
}

model ProfilePreferences {
  id                          String                  @id @default(uuid()) @db.Uuid
  profile_img                 Bytes?                  

  user                        User?                   @relation
}